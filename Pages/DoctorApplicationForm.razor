@page "/doctorapplication"
@using MediPortal_Client.Models.Authentication;
@using MediPortal_Client.Models.Hospital;
@using MediPortal_Client.Services.Hospital;
@inject IAuthInterface authInterface
@inject NavigationManager navManager
@inject IHospitalInterface _hospitalInterface
<div class="row m-lg-5 my-4 p-3 shadow" style=" border-radius:30px 0 30px 0;">

    <div class="col-lg-6 text-center">
        <h1 class=" p-3">Application Form</h1>
        <img src="https://cdn.pixabay.com/photo/2016/08/31/11/54/icon-1633249_640.png" style="height:200px;" class="my-3" />
       <p>please fill all the fields</p>
    </div>
    <div class="col-lg-6 ">
        <EditForm Model="@user" OnValidSubmit="registerUser" enctype="multipart/form-data">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group ">
                <label for="firstname">Firstname</label>
                <InputText type="text" @bind-Value="@user.firstname" class="form-control p-3" />
                <ValidationMessage For="@(()=>user.firstname)" />
            </div>
            <div class="form-group ">
                <label for="lastname">Lastname</label>
                <InputText type="text" @bind-Value="@user.lastname" class="form-control p-3" />
                <ValidationMessage For="@(()=>user.lastname)" />
            </div>
            <div class="form-group ">
                <label for="surname">Surname</label>
                <InputText type="text" @bind-Value="@user.surname" class="form-control p-3" />
                <ValidationMessage For="@(()=>user.surname)" />
            </div>
            <div class="form-group ">
                <label for="speciality">Speciality</label>
                <InputSelect class="form-control" @bind-Value="user.speciality">
                    <option>Select your speciality</option>
                    @foreach (var item in Specialities)
                    {
                        <option>@item</option>
                    }
                </InputSelect>
            </div>
            <div class="form-group ">
                <label for="email">Email</label>
                <InputText type="email" @bind-Value="@user.Email" class="form-control p-3" />
                <ValidationMessage For="@(()=>user.Email)" />
            </div>
            <div class="form-group ">
                <label for="password">Password</label>
                <InputText type="password" @bind-Value="@user.Password" class="form-control p-3" />
                <ValidationMessage For="@(()=>user.Password)" />
            </div>
            <div class="form-group ">
                <label for="license">License</label>
                <InputText type="text" @bind-Value="@user.LicenseUrl" class="form-control p-3" />
                <ValidationMessage For="@(()=>user.LicenseUrl)" />
            </div>
            <div class="form-group">
                <label for="Hospital">Hospital</label>
                <InputSelect @bind-Value="user.HospitalName" class="form-control">
                    <option>Select your Hospital of work</option>
                    @foreach(var item in hospitals)
                    {
                        <option>@item.Hospitalname</option>
                    }
                </InputSelect>
            </div>
          @* 
            <div class="form-group">
                <label>Upload your Medical Licence Image</label>
                <InputFile @bind-Value="user.License" type="file" class="form-control" />
            </div> *@
            <div class="form-group p-3 text-center">
                <button type="submit" class="btn btn-primary p-2" style="background:#000235; width:150px; font-weight:600; border-radius:20px; border:none;">Submit</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private RegistrationRequestDto user = new RegistrationRequestDto();
    private List<HospitalDto> hospitals = new List<HospitalDto>();
    List<string> Specialities = new List<string>()
    {
        "Dentist",
        "Optician"
    };
    protected override async Task OnInitializedAsync()
    {
        try
        {
            hospitals = await _hospitalInterface.GetHospitals();          

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.InnerException.Message);
        }
    }
    private async Task registerUser()
    {
        try
        {

            var res = await authInterface.RegisterUser(user);
            Console.WriteLine(res.IsSuccess);
            if (res.IsSuccess)
            {
                navManager.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.InnerException.Message);
        }

    }

}
