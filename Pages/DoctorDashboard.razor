@using MediPortal_Client.Services.Appointment;
@inject IAppointmentInterface _appointmentInterface
@inject NavigationManager _navManager
<div class="row">      
   
    <div class="col-lg-12">
        <div class="text-center">
            <h4>Welcome @User</h4>
        </div>
        <div class="d-lg-flex">
            <div class=" text-white text-center p-3" style="background:#000235; border-radius:30px 0 30px 0;">
                <h4>Reminder!!</h4>
                <h3 class="text-start fw-lighter" style="font-size:16px;">You an appointment with Dr.John Doe at OutSpan Hospital at 11:00 am!!</h3>
            </div>
           
          
        </div>
        <div class="my-2">
            <div class="d-lg-flex flex-wrap w-100 shadow justify-content-around p-3" style=" border-radius:20px;">
                <h4 class="text-black">Patient List</h4>
               <select class="d-none d-lg-block" @bind="SelectedOption">
                   <option>Filter by</option>
                   <option>By date</option>
                   <option>By status</option>
                   <option>By Payments</option>
               </select>
              
               <div class="d-lg-flex">
                    <input placeholder="Search patient..." class="rounded-3 text-center" style=" border-radius:50px;" />
                    <button class="btn btn-primary" style="background:#000235; border-radius:5px;">Search</button>
               </div>
              
            </div>
            <div class="table-responsive">
                <table class="table mt-1 p-2">
                    <thead style="background:#000235; color:#fff;">
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">Appointment Date</th>
                            <th scope="col">Agenda</th>
                            <th scope="col">Symptoms</th>
                             <th scope="col">Status</th>
                            <th scope="col">View</th>

                        </tr>

                    </thead>
                    <tbody>
                        @foreach(var appointment in appointments)
                        {
                            <tr>
                                <td>@appointment?.Patient?.firstname @appointment?.Patient?.surname</td>
                                <td>@appointment.AppointmentDate</td>
                                <td>@appointment.AppointmentType</td>
                                <td>@appointment.Symptoms</td>
                                <td>@appointment.AppointmentStatus</td>
                                <td><button class="btn btn-primary" @onclick="(()=>showAppointment(appointment.AppointmentId))">View details</button></td>
                            </tr>
                        }                     
                       
                       
                    </tbody>
                </table>
            </div>
          
        </div>
    </div>

</div>

@code {
    private string SelectedOption;
    private string User;
    public Guid UserId;
    [CascadingParameter]
    public Task<AuthenticationState> _authState { get; set; }
    private List<AppointmentDto> appointments = new List<AppointmentDto>();   
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var AllAppointments = await _appointmentInterface.GetAppointments();

            var authState = await _authState;
            var username = authState.User.FindFirst("name")?.Value;
            var Id = authState.User.FindFirst("sub")?.Value;
            User = username;
            UserId = Guid.Parse(Id);            
            appointments = AllAppointments.Where(x => x.DoctorId == UserId).ToList();            

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.InnerException.Message);
        }

    }
    public async Task showAppointment(Guid Id)
    {
        _navManager.NavigateTo($"/appointment/{Id}");
    }

}
